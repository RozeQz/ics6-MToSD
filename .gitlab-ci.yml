# Указываем образ для Docker
image: ubuntu:20.04

stages:
  - compile
  - test
  - delivery

# Задаём команды, которые будут выполнены до прогона скриптов
before_script:
  - apt-get -y update
  - export DEBIAN_FRONTEND=noninteractive
  - export TZ=Europe/Moscow

# Собираем проект
build-code:
  stage: compile
  script:
    # Устанавливаем пакеты
    - apt-get -y install gcc g++
    - apt-get -y install make
    # Собираем
    - g++ main.cpp -o main -std=c++17
  # Сохраняем в артефактах
  artifacts:
    paths:
      - main
    expire_in: 30 minutes

# Автотесты
test-all:
  stage: test
  script:
    - chmod +x test*
    - ./main > test-result.txt
    - diff test-sample.txt test-result.txt

# Используем GitLab Pages для публикации Doxygen-документации
pages:
  stage: delivery
  script:
    # Устанавливаем пакеты
    - apt-get -y install gcc g++ make doxygen graphviz lcov
    # Прогоняем Doxygen
    - doxygen Doxyfile.cfg
    # Прогоняем сборку
    - g++ main.cpp -o main -std=c++17 -O0 --coverage
    # Прогоняем тесты
    - chmod +x test*
    - ./main
    # Строим отчёт покрытия
    - lcov -t "lab" -o lab.info -c -d . --no-external
    - genhtml -o coverage lab.info
    # Диплоим
    - mv doxygen/ public/
    - mv coverage/ public/coverage/

  coverage: /^\s*lines\.*:\s+\d+\.\d+%/

  artifacts:
    paths:
      - public

  only:
    - master
